<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clothSale.mapper.GoodsSkuMapper">
    <resultMap id="BaseResultMap" type="com.clothSale.model.GoodsSku">
        <id column="sku_id" property="skuId" jdbcType="VARCHAR"/>
        <result column="price_input" property="priceInput" jdbcType="DECIMAL"/>
        <result column="price_sale" property="priceSale" jdbcType="DECIMAL"/>
        <result column="stock" property="stock" jdbcType="INTEGER"/>
        <result column="spu_id" property="spuId" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_update" property="gmtUpdate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    sku_id, price_input,price_sale, stock, spu_id, gmt_create, gmt_update
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from goods_sku
        where sku_id = #{skuId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from goods_sku
    where sku_id = #{skuId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.clothSale.model.GoodsSku">
    insert into goods_sku (sku_id, price_input,price_sale, stock,
      spu_id, gmt_create, gmt_update
      )
    values (#{skuId,jdbcType=VARCHAR}, #{priceInput,jdbcType=DECIMAL},#{priceSale,jdbcType=DECIMAL}, #{stock,jdbcType=INTEGER},
      #{spuId,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.clothSale.model.GoodsSku">
        insert into goods_sku
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="skuId != null">
                sku_id,
            </if>
            <if test="priceInput != null">
                price_input,
            </if>
            <if test="priceSale != null">
                price_sale,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="spuId != null">
                spu_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtUpdate != null">
                gmt_update,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="skuId != null">
                #{skuId,jdbcType=VARCHAR},
            </if>
            <if test="priceInput != null">
                #{priceInput,jdbcType=DECIMAL},
            </if>
            <if test="priceSale != null">
                #{priceSale,jdbcType=DECIMAL},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="spuId != null">
                #{spuId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtUpdate != null">
                #{gmtUpdate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.clothSale.model.GoodsSku">
        update goods_sku
        <set>
            <if test="priceInput != null">
                price_input = #{priceInput,jdbcType=DECIMAL},
            </if>
            <if test="priceSale != null">
                price_sale = #{priceSale,jdbcType=DECIMAL},
            </if>
            <if test="stock != null">
                stock = stock+#{stock,jdbcType=INTEGER},
            </if>
            <if test="spuId != null">
                spu_id = #{spuId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtUpdate != null">
                gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where sku_id = #{skuId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.clothSale.model.GoodsSku">
    update goods_sku
    set price_input = #{priceInput,jdbcType=DECIMAL},
      price_sale = #{priceSale,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=INTEGER},
      spu_id = #{spuId,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
    where sku_id = #{skuId,jdbcType=VARCHAR}
  </update>

    <select id="selectAllSku" resultType="java.util.Map">
        select sku.*,GROUP_CONCAT(val.spec_value) as spec_value,spu.goods_name from goods_sku sku
          left join goods_sku_spec_value sv on sku.sku_id = sv.sku_id
          left join goods_spec_value val on val.spec_value_id = sv.spec_value_id
		  left join goods_spu spu on spu.spu_id = sku.spu_id
		  where sku.spu_id = #{spu_id}
		  GROUP BY sku.sku_id
		  limit #{pageIndex},#{pageSize}
    </select>

    <select id="test" resultType="java.util.Map">
        select sku.sku_id,sku.price_input,price_sale,sku.stock from goods_sku_spec_value sv
        left join goods_sku sku on sku.sku_id = sv.sku_id
        left join goods_spec_value val on val.spec_value_id = sv.spec_value_id
        where
        <foreach collection="list" index="index" item="item">
            <if test="index == 0">
                ( val.spec_value_id = #{item} and sku.spu_id = #{spu_id} )
            </if>
            <if test="index != 0">
                or ( val.spec_value_id = #{item} and sku.spu_id = #{spu_id} )
            </if>
        </foreach>
        GROUP BY sku.sku_id
        having count(*) = #{size}
    </select>

    <insert id="insertGoodsSkuSpecValue">
    INSERT INTO goods_sku_spec_value(sku_id, spec_value_id, gmt_create, gmt_update)
        VALUES (#{sku_id}, #{spec_value_id}, #{gmt_create}, #{gmt_update});
  </insert>
</mapper>