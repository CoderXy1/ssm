<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.angular.mapper.GoodsBrandMapper" >
  <resultMap id="BaseResultMap" type="com.angular.model.GoodsBrand" >
    <id column="brand_id" property="brandId" jdbcType="VARCHAR" />
    <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_update" property="gmtUpdate" jdbcType="TIMESTAMP" />
    <result column="brand_order" property="brandOrder" jdbcType="INTEGER" />
    <result column="brand_icon_id" property="brandIconId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    brand_id, brand_name, gmt_create, gmt_update, brand_order, brand_icon_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods_brand
    where brand_id = #{brandId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goods_brand
    where brand_id = #{brandId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.angular.model.GoodsBrand" >
    insert into goods_brand (brand_id, brand_name, gmt_create, 
      gmt_update, brand_order, brand_icon_id
      )
    values (#{brandId,jdbcType=VARCHAR}, #{brandName,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtUpdate,jdbcType=TIMESTAMP}, #{brandOrder,jdbcType=INTEGER}, #{brandIconId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.angular.model.GoodsBrand" >
    insert into goods_brand
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="brandName != null" >
        brand_name,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtUpdate != null" >
        gmt_update,
      </if>
      <if test="brandOrder != null" >
        brand_order,
      </if>
      <if test="brandIconId != null" >
        brand_icon_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="brandId != null" >
        #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null" >
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null" >
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="brandOrder != null" >
        #{brandOrder,jdbcType=INTEGER},
      </if>
      <if test="brandIconId != null" >
        #{brandIconId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.angular.model.GoodsBrand" >
    update goods_brand
    <set >
      <if test="brandName != null" >
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null" >
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="brandOrder != null" >
        brand_order = #{brandOrder,jdbcType=INTEGER},
      </if>
      <if test="brandIconId != null" >
        brand_icon_id = #{brandIconId,jdbcType=VARCHAR},
      </if>
    </set>
    where brand_id = #{brandId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.angular.model.GoodsBrand" >
    update goods_brand
    set brand_name = #{brandName,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      brand_order = #{brandOrder,jdbcType=INTEGER},
      brand_icon_id = #{brandIconId,jdbcType=VARCHAR}
    where brand_id = #{brandId,jdbcType=VARCHAR}
  </update>

  <select id="selectGoodsBrand" resultType="java.util.Map">
    select *  from goods_brand
      where 1 = 1
      <if test="brandName != null and brandName != ''">
          and brand_name = #{brandName,jdbcType=VARCHAR}
      </if>
      order by brand_order limit #{pageIndex},#{pageSize}
  </select>


</mapper>